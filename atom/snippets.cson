# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson
'.source.ts':
  'ts constructor':
   'prefix': 'ctor'
   'body': """
     constructor() {

     }
   """
'.source.js':
  'angular module':
    'prefix': 'ngModule'
    'body': """
      (function() {
        'use strict';

        angular
         .module('$1', [$2]);
      }());
    """
  'angular controller':
    'prefix': 'ngController'
    'body': """
      (function() {
        'use strict';

        angular
         .module('$1')
         .controller('$2', $2);

        function $2() {
          $3
        }
      }());
    """
  'angular factory':
    'prefix': 'ngFactory'
    'body': """
      (function() {
        'use strict';

        angular
         .module('$1')
         .factory('$2', $2);

        function $2() {
          return {
            $3
          }
        }
      }());
    """
  'angular route':
    'prefix': 'ngRoute'
    'body': """
      (function() {
        'use strict';

        angular
         .module('$1')
         .config(routes);

        routes.$inject = ['$routeProvider'];

        function routes($routeProvider) {
          $routeProvider
            .when('$2', {
              templateUrl: '$3.html',
              controller: '$4',
              controllerAs: '$5'
            });
        }
      }());

    """
